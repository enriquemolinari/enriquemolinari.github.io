<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-01-02T11:07:31-03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Copy Paste is for Word</title><subtitle>Software Architecture, development and more </subtitle><entry><title type="html">Understanding React</title><link href="http://localhost:4000/react/2021/12/25/understanding-react.html" rel="alternate" type="text/html" title="Understanding React" /><published>2021-12-25T21:12:13-03:00</published><updated>2021-12-25T21:12:13-03:00</updated><id>http://localhost:4000/react/2021/12/25/understanding-react</id><content type="html" xml:base="http://localhost:4000/react/2021/12/25/understanding-react.html">&lt;p&gt;Here is my second book. You can buy it follow the link: &lt;a href=&quot;https://leanpub.com/understandingreact&quot;&gt;Understanding React&lt;/a&gt;. If you are one of my students, it is free for you, just write me an email.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/understanding-react-cover.png&quot; alt=&quot;Book Cover&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Learn how to code applications in React by following a solid path that starts by studying essential JavaScript constructions to then go into React core concepts to finally write an application. Understand how to split an application into components (class or function-based ones), how to use props, state, events, hooks, react router, and more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Every successful framework or library provides something unique which gives developers a new tool for writing better software. In the case of React, that tool is called component. You might be thinking that you have been reading about components as the solution to your spaghetti software nightmare for the last 15 years without any success. You are not wrong. However, React is an exception. It provides the constructions and tools to build highly cohesive components to assemble your next application. In this book, we will study React core concepts, to end up being very practical describing how to split an application into components and to fully implement it.&lt;/p&gt;</content><author><name></name></author><category term="react" /><summary type="html">Here is my second book. You can buy it follow the link: Understanding React. If you are one of my students, it is free for you, just write me an email. Learn how to code applications in React by following a solid path that starts by studying essential JavaScript constructions to then go into React core concepts to finally write an application. Understand how to split an application into components (class or function-based ones), how to use props, state, events, hooks, react router, and more. Every successful framework or library provides something unique which gives developers a new tool for writing better software. In the case of React, that tool is called component. You might be thinking that you have been reading about components as the solution to your spaghetti software nightmare for the last 15 years without any success. You are not wrong. However, React is an exception. It provides the constructions and tools to build highly cohesive components to assemble your next application. In this book, we will study React core concepts, to end up being very practical describing how to split an application into components and to fully implement it.</summary></entry><entry><title type="html">Coding an Architecture Style</title><link href="http://localhost:4000/architecture/2020/06/12/coding-architecture.html" rel="alternate" type="text/html" title="Coding an Architecture Style" /><published>2020-06-12T21:12:13-03:00</published><updated>2020-06-12T21:12:13-03:00</updated><id>http://localhost:4000/architecture/2020/06/12/coding-architecture</id><content type="html" xml:base="http://localhost:4000/architecture/2020/06/12/coding-architecture.html">&lt;p&gt;I have just released my first book. You can buy it follow the link:  &lt;a href=&quot;https://leanpub.com/codinganarchitecturestyle&quot;&gt;Coding an Architecture Style&lt;/a&gt;. If you are one of my students, it is free for you, just write me an email.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/coding-arch-cover.png&quot; alt=&quot;Book Cover&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you want to know how to design and code an application with Modular Architecture, or with Layered Architecture or with Hexagonal Architecture (Clean Architecture), or with Microservice Architecture this book is for you. If you are a developer who is always trying to write clean, solid and elegant software structures, this book is for you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you have had the bad experience of having to maintain a complex “big ball of mud” enterprise application, with pressure from the business to go to production with new features under an aggressive schedule, you, better than anyone, know how important is to have a solid architecture with clear defined rules where we can make modifications, having an understanding where every change will impact.&lt;/p&gt;

&lt;p&gt;However, it is not enough to understand how to create solid architectures by looking at beautiful architectural diagrams. Or by reading long explanations about the benefits of Microservices or Modularity. Understanding how to create solid structures requires opening an IDE and starting coding. We have to learn what syntactical constructions, other than classes, functions and procedures, our favourite programming language offers to create large-scale applications and just there we will be able to craft different software structures and start recognizing their benefits and drawbacks.&lt;/p&gt;

&lt;p&gt;Throughout this book we will iterate an application in order to show how to code different architecture styles. In each iteration we study and implement an architecture style, going through layered architecture, hexagonal (or ports and adapters), modular and microservices. All this is supported by solid architecture concepts, simple designs and good practices. We use Java 11 to implement all the mentioned styles. In particular, to implement the modular architecture style we use the module system incorporated in Java since version 9. We also show different options to verify the architecture rules imposed by each style. All sources are available for the reader.&lt;/p&gt;

&lt;p&gt;Although the implementation is done in the Java language, it is possible to apply the same concepts in languages such as PHP, Ruby, Python or .NET.&lt;/p&gt;

&lt;p&gt;We will also review the different architectural views, we discuss properties of monolith vs distributed architectures to finish with a pragmatic study of availability and scalability quality attributes.&lt;/p&gt;</content><author><name></name></author><category term="architecture" /><summary type="html">I have just released my first book. You can buy it follow the link: Coding an Architecture Style. If you are one of my students, it is free for you, just write me an email. If you want to know how to design and code an application with Modular Architecture, or with Layered Architecture or with Hexagonal Architecture (Clean Architecture), or with Microservice Architecture this book is for you. If you are a developer who is always trying to write clean, solid and elegant software structures, this book is for you. If you have had the bad experience of having to maintain a complex “big ball of mud” enterprise application, with pressure from the business to go to production with new features under an aggressive schedule, you, better than anyone, know how important is to have a solid architecture with clear defined rules where we can make modifications, having an understanding where every change will impact. However, it is not enough to understand how to create solid architectures by looking at beautiful architectural diagrams. Or by reading long explanations about the benefits of Microservices or Modularity. Understanding how to create solid structures requires opening an IDE and starting coding. We have to learn what syntactical constructions, other than classes, functions and procedures, our favourite programming language offers to create large-scale applications and just there we will be able to craft different software structures and start recognizing their benefits and drawbacks. Throughout this book we will iterate an application in order to show how to code different architecture styles. In each iteration we study and implement an architecture style, going through layered architecture, hexagonal (or ports and adapters), modular and microservices. All this is supported by solid architecture concepts, simple designs and good practices. We use Java 11 to implement all the mentioned styles. In particular, to implement the modular architecture style we use the module system incorporated in Java since version 9. We also show different options to verify the architecture rules imposed by each style. All sources are available for the reader. Although the implementation is done in the Java language, it is possible to apply the same concepts in languages such as PHP, Ruby, Python or .NET. We will also review the different architectural views, we discuss properties of monolith vs distributed architectures to finish with a pragmatic study of availability and scalability quality attributes.</summary></entry><entry><title type="html">What is the role of a Software Architect ?</title><link href="http://localhost:4000/architecture/2011/05/22/architect-role.html" rel="alternate" type="text/html" title="What is the role of a Software Architect ?" /><published>2011-05-22T21:12:13-03:00</published><updated>2011-05-22T21:12:13-03:00</updated><id>http://localhost:4000/architecture/2011/05/22/architect-role</id><content type="html" xml:base="http://localhost:4000/architecture/2011/05/22/architect-role.html">&lt;p&gt;If you are an Architect you may have discovered that you are not going to be asked to spend all your time on improving the design of an existing software product, nor to write code for an specific project.&lt;/p&gt;

&lt;p&gt;As soon as you become an Architect, your meeting’s calendar will grow considerably. You will be asked to do the planning for several projects, to come up with estimates, and a very high level description of the software components that will need to be taken into account to accomplish the project. In addition, if you work for a big multinational company, you will be asked to analyse the software technologies of other companies that your company has the intention to acquire.
Then, you will present your work to the business using a slide based or a word based tool. This is fine. You have to have very good communication skills.&lt;/p&gt;

&lt;p&gt;But, you cannot forget that an entire team of developers and technical leads are waiting for your guidance too. You cannot leave them behind, you must find the time to write code, to design, to configure a development environment, to write test cases, to explain why an algorithm is better than other, to help developers to fix bugs, to help developers to write maintainable code, to help developers to write unit testable code, to help developers to come up with good designs, to help developers to identify and propose solutions for performance bottlenecks, etc. As an Architect, you must be able to replace a developer if for any reason that is required. In order to be able to do this and in order to lead (by example) a development team, you cannot be entirely divorced from development activities.&lt;/p&gt;

&lt;p&gt;Try to find the balance between business related activities vs development activities. If you find hard to have time for development activities, block your calendar once a week (half day) to sit down and write code. This does not mean that you want to ignore an important part of your role, this means that you want to be prepared one day to do development for an underestimated project to deliver it in time.&lt;/p&gt;

&lt;p&gt;Stay with your development team, don’t isolate yourself in an office. Make feel them that you are there if they need any help or suggestion. Listen what they say while doing development. Write code yourself and commit code into the repository once in a while.&lt;/p&gt;

&lt;p&gt;Oh yes… you will have more work to do with the same amount of hours you had before.&lt;/p&gt;</content><author><name></name></author><category term="architecture" /><summary type="html">If you are an Architect you may have discovered that you are not going to be asked to spend all your time on improving the design of an existing software product, nor to write code for an specific project. As soon as you become an Architect, your meeting’s calendar will grow considerably. You will be asked to do the planning for several projects, to come up with estimates, and a very high level description of the software components that will need to be taken into account to accomplish the project. In addition, if you work for a big multinational company, you will be asked to analyse the software technologies of other companies that your company has the intention to acquire. Then, you will present your work to the business using a slide based or a word based tool. This is fine. You have to have very good communication skills. But, you cannot forget that an entire team of developers and technical leads are waiting for your guidance too. You cannot leave them behind, you must find the time to write code, to design, to configure a development environment, to write test cases, to explain why an algorithm is better than other, to help developers to fix bugs, to help developers to write maintainable code, to help developers to write unit testable code, to help developers to come up with good designs, to help developers to identify and propose solutions for performance bottlenecks, etc. As an Architect, you must be able to replace a developer if for any reason that is required. In order to be able to do this and in order to lead (by example) a development team, you cannot be entirely divorced from development activities. Try to find the balance between business related activities vs development activities. If you find hard to have time for development activities, block your calendar once a week (half day) to sit down and write code. This does not mean that you want to ignore an important part of your role, this means that you want to be prepared one day to do development for an underestimated project to deliver it in time. Stay with your development team, don’t isolate yourself in an office. Make feel them that you are there if they need any help or suggestion. Listen what they say while doing development. Write code yourself and commit code into the repository once in a while. Oh yes… you will have more work to do with the same amount of hours you had before.</summary></entry></feed>